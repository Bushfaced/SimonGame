//*********/ CONSTANTS *****************/
const colors = [1, 2, 3, 4]; //this holds the array for the possible choices

//*********/ STATE VARIABLES ***********/
let compPattern = [];
let playerPattern = [];
let round;
let flash;
let compTurn;
let intervals;
let win;

// let results; //this will be the variable for comparing if the userWonLevel, and 
// // what level they are on, or if they lost and the game resets to level one
// let delay; //this variable will control the intervals between the lights flashing during 
// // a level, and before the start of the next level. Also sets no time limit for the user

// let levelDelay;

// let playerTurn; //this compares each player click to the random sequence generated by
// // the computer.
//  //this stops the user from being able to interact with the page while the
// // computerPattern plays as well as initiates the turn.
// let pattern;

//*********/ Event Listeners ***********/
const red = document.querySelector('#red')
const blue = document.querySelector('#blue')
const green = document.querySelector('#green')
const purple = document.querySelector('#purple')
const startButton = document.querySelector('#start-button')
const roundCount = document.querySelector('#round')
const message = document.querySelector('#message')

// ******function********* //

// function startGame() {
//   init();
//   renderPattern();
//   // playerTurn();
//   // clickedButtons();
//   // renderResults();
// };

function init() {
  win = false;
  compPattern = [];
  playerPattern = [];
  flash = 0;
  intervals = 0;
  round = 1;
  newColor();
  let delay = 350;
  blue.style.backgroundColor = 'white';
  setTimeout(() => {
    blue.style.backgroundColor = 'blue';
  }, delay);
  delay += 350;

  red.style.backgroundColor = 'white';
  setTimeout(() => {
    red.style.backgroundColor = 'red';
  }, delay);
  delay += 350;
  
  green.style.backgroundColor = 'white';
  setTimeout(() => {
    green.style.backgroundColor = 'green';
  }, delay);
  delay += 350;
  
  purple.style.backgroundColor = 'white';
  setTimeout(() => {
    purple.style.backgroundColor = 'purple';
  }, delay);
  
  compTurn = true;
  intervals = setInterval(playerTurn, 2000);
};

// flash = 0  round = 1
function playerTurn() {
  if (flash === round) {
    clearInterval(intervals);
    compTurn = false;
    clearColor();
  }
  if (compTurn) {
    clearColor();
    setTimeout(() => {
      if (compPattern[flash] === 1) one();
      if (compPattern[flash] === 2) two();
      if (compPattern[flash] === 3) three();
      if (compPattern[flash] === 4) four();
      flash++;
    }, 1500);
  }
};

function newColor() {
  compPattern.push(Math.floor(Math.random() * 4) + 1);
  console.log(compPattern);
};


function one() {
  red.style.backgroundColor = 'pink';
  setTimeout(() => {
    red.style.backgroundColor = 'red';
  }, 350);
};

function two() {
  blue.style.backgroundColor = 'aqua';
  setTimeout(() => {
    blue.style.backgroundColor = 'blue';
  }, 350);
};

function three() {
  green.style.backgroundColor = 'limegreen';
  setTimeout(() => {
    green.style.backgroundColor = 'green';
  }, 350);
};

function four() {
  purple.style.backgroundColor = 'lavender';
  setTimeout(() => {
    purple.style.backgroundColor = 'purple';
  }, 350);
};

function clearColor() {
  red.style.backgroundColor = "red";
  blue.style.backgroundColor = "blue";
  purple.style.backgroundColor = "purple";
  green.style.backgroundColor = "green";
}

startButton.addEventListener('click', (event) => {
  init()
});

red.addEventListener('click', (event) => {
  if (flash) {
      playerPattern.push(1);
      runCheck();
      one();
  } console.log('red');
})

blue.addEventListener('click', (event) => {
  if (flash) {
      playerPattern.push(2);
      runCheck();
      two();
  } console.log('blue');
})

purple.addEventListener('click', (event) => {
  if (flash) {
      playerPattern.push(3);
      runCheck();
      three();
  } console.log('purple');
})

green.addEventListener('click', (event) => {
  if (flash) {
      playerPattern.push(4);
      runCheck();
      four();
  } console.log('green');
})

function runCheck() {
  if (JSON.stringify(compPattern) === JSON.stringify(playerPattern))
      message.innerText = message.textContent = 'Correct!';
  else {
      message.innerText = message.textContent = 'Incorrect!';
  }
  //console.log(runCheck);
}


function addColors() {
  if (message.textContent = "Correct!") {
      newColor();
      console.log(compPattern);
      playerPattern = [];
      let delay = 350;
      for (let color of compPattern)
          if (color === 1) {
              setTimeout(() => {
                  red.style.backgroundColor = "pink";
              }, delay);
              delay += 350;
          } else if (color === 2) {
              setTimeout(() => {
                  blue.style.backgroundColor = "aqua";
              }, delay);
              delay += 350;
          } else if (color === 3) {
              setTimeout(() => {
                  purple.style.backgroundColor = "lavender";
              }, delay);
              delay += 350;
          } else if (color === 4) {
              setTimeout(() => {
                  green.style.backgroundColor = "limegreen";
              }, delay);
              delay += 350;
          }

  }
}

function render() {
  addColors();
}










// function renderPattern(pattern) {
//   let pattern = colorChoices[randomIdx(colorChoices)]
//     for (let i = 0; i < colorChoices.length; i++) {
//       if (compTurn === true) {
//         return pattern;
//       } else if {
//         playerTurn === compTurn;
//         return 'You beat the Level!'
//         let delay = 1000;
//       } else {
//         return pattern;
//         // pattern.push(genRandomInt())
//     }
//   // loop through pattern 

//   //     highlight correct button blinkColor()
//   // if (compTurn === false) {
//   //   let delay = 500;
//   //   playerTurn();
//   // }
//   // //     pause intervals
//   // setTimeout(function endCompTurn() {
//   //   for (let i = 0; i < pattern.length; i++) {
//   //     // console.log('i = ' + i);
//   //     // console.log('done pausing');
//   //     compTurn = false;
//   //   } 1000
//   }
// };

// function genRandomInt() {

// };

// function blinkColor() {

// };

// function clickedButtons(evt) {
//   if (compTurn === false) {
//     delay = 350;

//     pattern.push(Math.floor(Math.random() * 4));  
//     [pattern.length] = Math.floor(Math.random() * 4);
//     results++;
//     // console.log(pattern);
//     // console.log(levels);
//     // console.log(evt);
//   }
// };

// function playAgain() {
//   console.log('working');
// };

