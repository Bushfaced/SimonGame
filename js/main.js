//*********/ CONSTANTS *****************/
const colorChoices = [0, 1, 2, 3]; //this holds the array for the possible choices





//*********/ STATE VARIABLES ***********/
let levels; //this will be the variable for comparing if the userWonLevel, and 
// what level they are on, or if they lost and the game resets to level one
let intervals; //this variable will control the intervals between the lights flashing during 
// a level, and before the start of the next level. Also sets no time limit for the user
let loseCondition; //there is no win condition. You can only lose once the user clicks the wrong color in the pattern
// follow the sequence.
let playerTurn; //this compares each player click to the random sequence generated by
// the computer.
let compTurn; //this stops the user from being able to interact with the page while the
// computerPattern plays as well as initiates the turn 
let pattern;


//*********/ Event Listeners ***********/
document.querySelector('.colorBtns').addEventListener('click', clickedButtons); //example event listener
document.querySelector('#startBtn').addEventListener('click', startGame);
// document.querySelector('main').addEventListener('click', handleChoice); //from class example on RPS
// ******function********* //


function init() {
  levels = 1;
  const intervals = 350;
  const loseCondition = [];
  const playerTurn = [];
  compTurn = true;
  pattern = [Math.floor(Math.random() * 4)];
  pattern = [1, 2, 3, 5, 0];
  console.log(pattern);
};

function startGame() {
  console.log('startGame');
  init();
  renderPattern();
  console.log("back from renderPattern");
  
};

function renderPattern() {
  // loop through pattern 
  //     highlight correct button blinkColor()
  //     pause intervals
  setTimeout(function(){ 
      for(let i = 0; i < pattern.length; i++) {
        console.log('i = ' + i);
      console.log('done sleeping');
      compTurn = false;
    }, 1000);
  }

};

function blinkColor() {

};

function clickedButtons(evt) {
  if (compTurn === false) {
    
    pattern[pattern.length] = Math.floor(Math.random() * 4);
    levels++;
    console.log(pattern);
    console.log(levels);
    console.log(evt);
  }
  
  // if (btnsClicked === compTurn) {
    //   return 'Level Won! Great memory'; 
  // } else {
  //   return 'You lose!';
  // } 
    // console.log(btnsClicked);
};



